<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:cnv="clr-namespace:Elvex.Toolbox.WPF.UI.Converters">

    <cnv:BoolToVisibilityConveter x:Key="TreeViewBoolToVisibilityConverter" />

    <Style x:Key="DefaultTreeViewStyle" TargetType="{x:Type TreeView}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeView">
                    <Border Name="Border"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}">

                        <ScrollViewer Focusable="False" CanContentScroll="False">
                            <ItemsPresenter Margin="{DynamicResource DefaultMargin}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TreeView}" BasedOn="{StaticResource DefaultTreeViewStyle}" />

    <Style x:Key="DefaultTreeViewItemStyle" TargetType="{x:Type TreeViewItem}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="OpacityMask" Value="{DynamicResource NormalMaskBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />

        <Setter Property="Foreground" Value="{DynamicResource AccentBrush}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19" Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <Border x:Name="BackBorder" Grid.ColumnSpan="1" Grid.Column="1" />

                        <ToggleButton x:Name="Expander"
                                      Style="{DynamicResource AddMinusToggleButton}"
                                      Foreground="{DynamicResource ContrastAccentBrush}"
                                      ClickMode="Press"
                                      IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"/>

                        <Border x:Name="Bd"
                                Grid.Column="1"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">

                            <ContentPresenter x:Name="PART_Header"
                                              ContentSource="Header"
                                              TextElement.Foreground="{DynamicResource MainForegroundBrush}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>

                        </Border>

                        <ItemsPresenter x:Name="ItemsHost"
                                        Grid.Row="1"
                                        Grid.Column="1"
                                        Visibility="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TreeViewBoolToVisibilityConverter}}" />
                    </Grid>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" TargetName="BackBorder" Value="{DynamicResource LightComplementaryBrush}" />
                            <Setter Property="Foreground" TargetName="Expander" Value="{DynamicResource AccentBrush}" />
                            <Setter Property="OpacityMask" Value="{DynamicResource HighlightMaskBrush}" />
                        </Trigger>

                        <Trigger Property="IsExpanded" Value="True">
                            <Setter Property="OpacityMask" Value="{DynamicResource HighlightMaskBrush}" />
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="OpacityMask" Value="{DynamicResource HighlightMaskBrush}" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="OpacityMask" Value="{DynamicResource HighlightMaskBrush}" />
                        </Trigger>

                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                        </Trigger>

                        <Trigger Property="HasItems" Value="true">
                            <Setter TargetName="BackBorder" Property="Grid.Column" Value="0" />
                            <Setter TargetName="BackBorder" Property="Grid.ColumnSpan" Value="2" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false" />
                                <Condition Property="Width" Value="Auto" />
                            </MultiTrigger.Conditions>

                            <Setter TargetName="PART_Header" Property="MinWidth" Value="75" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false" />
                                <Condition Property="Height" Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinHeight" Value="19" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="OpacityMask" Value="{DynamicResource DisabledMaskBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SelectTreeViewItem" BasedOn="{StaticResource DefaultTreeViewItemStyle}" TargetType="{x:Type TreeViewItem}">
        <Setter Property="IsSelected" Value="{Binding IsSelect, Mode=TwoWay}" />
    </Style>

    <Style BasedOn="{StaticResource DefaultTreeViewItemStyle}" TargetType="{x:Type TreeViewItem}" />
</ResourceDictionary>