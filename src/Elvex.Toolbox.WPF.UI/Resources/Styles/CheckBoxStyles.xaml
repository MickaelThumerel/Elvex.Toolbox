<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:cnv="clr-namespace:Elvex.Toolbox.WPF.UI.Converters">

    <cnv:GroupConverter x:Key="CheckboxCollapsedIfNullConverter">
        <cnv:NullToBoolConverter />
        <cnv:InvertConverter />
        <cnv:BoolToVisibilityConveter />
    </cnv:GroupConverter>

    <cnv:BoolToVisibilityConveter x:Key="CheckboxBoolToHiddenVisibilityConverter" UseHidden="True"  />

    <Style x:Key="DefaultCheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="BorderBrush" Value="{DynamicResource LightBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="TextElement.Foreground" Value="{DynamicResource MainForegroundBrush}" />
        <Setter Property="Background" Value="{DynamicResource MainBackgroundBrush}" />
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid Margin="{TemplateBinding Padding}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>

                        <Border x:Name="CheckArea" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Margin="{DynamicResource SmallTopBottomMargin}">

                            <Path Data="{DynamicResource CheckIconSource}"
                                  Style="{DynamicResource IconSmallestPathStyle}"
                                  Margin="0"
                                  Visibility="{Binding IsChecked, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CheckboxBoolToHiddenVisibilityConverter}}"
                                  RenderTransformOrigin="0.5, 0.5">
                                <Path.RenderTransform>
                                    <ScaleTransform ScaleX="1.8" ScaleY="1.8" />
                                </Path.RenderTransform>
                            </Path>

                        </Border>

                        <ContentPresenter Margin="{DynamicResource SmallMargin}" Grid.Column="1"
                                          Visibility="{TemplateBinding Content, Converter={StaticResource CheckboxCollapsedIfNullConverter}}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource DefaultCheckBoxStyle}" TargetType="{x:Type CheckBox}" />

    <Style x:Key="DefaultRadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="BorderBrush" Value="{DynamicResource LightBorder}" />
        <Setter Property="BorderThickness" Value="{DynamicResource DefaultBorderThickness}" />
        <Setter Property="TextElement.Foreground" Value="{DynamicResource MainForegroundBrush}" />
        <Setter Property="Background" Value="{DynamicResource MainBackgroundBrush}" />
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid Margin="{TemplateBinding Padding}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>

                        <Grid x:Name="CheckArea" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Background="{TemplateBinding Background}"
                              Margin="{DynamicResource SmallTopBottomMargin}">

                            <Ellipse x:Name="BackgroundCircle"
                                     Fill="{DynamicResource LightBackgroundBrush}"
                                     Height="{DynamicResource IconSmallestSize}"
                                     Width="{DynamicResource IconSmallestSize}"
                                     Stroke="{TemplateBinding BorderBrush}"
                                     StrokeThickness="{TemplateBinding BorderThickness}"
                                     VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

                            <Ellipse Fill="{DynamicResource AccentBrush}"
                                     Width="{DynamicResource InnerIconSmallestSize}"
                                     Height="{DynamicResource InnerIconSmallestSize}"
                                     Stroke="{TemplateBinding BorderBrush}"
                                     VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                     Visibility="{Binding IsChecked, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource CheckboxBoolToHiddenVisibilityConverter}}"
                                     StrokeThickness="{TemplateBinding BorderThickness}" />

                        </Grid>

                        <ContentPresenter Margin="{DynamicResource SmallMargin}" Grid.Column="1"
                                          Visibility="{TemplateBinding Content, Converter={StaticResource CheckboxCollapsedIfNullConverter}}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource DefaultRadioButtonStyle}" TargetType="{x:Type RadioButton}" />

</ResourceDictionary>